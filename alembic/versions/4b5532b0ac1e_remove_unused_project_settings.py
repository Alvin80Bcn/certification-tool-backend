#
# Copyright (c) 2023 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
"""Remove Unused Project Settings

Revision ID: 4b5532b0ac1e
Revises: 079b491a5069
Create Date: 2022-04-15 14:06:24.927297

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "4b5532b0ac1e"
down_revision = "079b491a5069"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("project", "dut_type")
    op.drop_column("project", "dut_pid")
    op.drop_column("project", "wifi_password")
    op.drop_column("project", "thread_extpanid")
    op.drop_column("project", "thread_masterkey")
    op.drop_column("project", "thread_panid")
    op.drop_column("project", "wifi_ssid")
    op.drop_column("project", "thread_channel")
    op.drop_column("project", "thread_rcp_serial_path")
    op.drop_column("project", "dut_vid")
    op.drop_column("project", "thread_on_mesh_prefix")
    op.drop_column("project", "thread_networkname")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project",
        sa.Column(
            "thread_networkname", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project",
        sa.Column(
            "thread_on_mesh_prefix", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project",
        sa.Column("dut_vid", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column(
            "thread_rcp_serial_path", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "project",
        sa.Column("thread_channel", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("wifi_ssid", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("thread_panid", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("thread_masterkey", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("thread_extpanid", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("wifi_password", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column("dut_pid", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "project",
        sa.Column(
            "dut_type",
            postgresql.ENUM("CONTROLLER", "APP", "ACCESSORY", name="duttype"),
            autoincrement=False,
            nullable=False,
        ),
    )
    # ### end Alembic commands ###
